#+title: Writable TAG
#+date:  $Date: 2024-08-31 12:55:27+09 $ $Revision: 2.21 $

  wtag は MP3 等の音楽ファイルのタグをアルバム単位で編集するための Emacs lisp です.

  このテキストは wtag.el 3.3 のマニュアルです.

#+BEGIN_QUOTE
    Copyright (C) 2019 - 2024 s.fubuki <fubuki at frill dot org>
    
    Permission is granted to copy, distribute and/or modify this document
    under the terms of the GNU Free Documentation License, Version 1.3
    or any later version published by the Free Software Foundation;
    with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
    A copy of the license is included in the section entitled "GNU
    Free Documentation License".
#+END_QUOTE

* OVERVIEW
  `mf-tag-write'(参照 [[info:wtag.info#mf-tag-write]]) で対応しているコーデックに対応しています.
  mp4(m4a), oma(atrac3plus), mp3(ID3v2.2 ID3v2.3), flac, wav 等です.
  表示のみなら ogg, wma, aiff 等も見れます. 

  動作テストを行なった環境は Win11 / Win10(64bit) で
  "GNU Emacs 30.0.50 (build 1, x86_64-w64-mingw32) of 2023-04-16".
  解析やテストに使った音楽ファイルは 90% が Sonic Stage CP, Media Go, Music Center 1, 2 で CD よりリッピングしたデータ, 
  残り 10% が iTunes やレコチョク, dead.net 等からのデータです.

* 導入と起動
  [[https://github.com/s-fubuki/wtag]] にある .el file を `load-path' の通った処にコピーして
  `init.el' でロードするように設定します.

#+BEGIN_SRC emacs-lisp
(require 'wtag)
;; または
(autoload 'wtag "wtag" nil t)
(autoload 'dired-wtag "wtag" nil t)
;; 前者はシンプルですが使う予定がなくてもロードされます.
;; 後者は使うときにロードされるので Emacs の初期起動への負担が軽減されます.
#+END_SRC

起動法はふたつあり

- Command: wtag directory ::
  いわゆるアルバムのディレクトリを指定して起動します.
  `M-x wtag' 等と起動するとディレクトリを尋ねてきます.

- Command: dired-wtag ::
  dired でポイントされているアルバム・ディレクトリを開きます.   

  必要なら適当なキーに `init.el' などからバインドします. 

#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-c a") #'wtag)
(add-hook 'dired-mode-hook '(lambda () (local-set-key (kbd "C-c a") #'dired-wtag))
(easy-menu-add-item global-map '(menu-bar) '("Private" ["wtag" wtag]))
#+END_SRC

  起動するとアルバムの中身の一覧が wtag view mode で開きます. 

  `Q' または `q' で終了します.

- Variable: wtag-vbr ::
  non-nil なら mp3 のときファイルを最後まで完全に読み込み
  VBR mp3 の正しいビットレートの平均値を得ます.
  通常ヘッダに当たる部分しか読み込まないファイルを,
  すべて読み込むようになるため起動が遅くなります.
  wtag を prefix 起動した場合も有効になります(`C-u M-x wtag'). 
  デフォルトは nil です.

- Variable: wtag-sort-track ::
  wtag 起動時のソートの順列を決める比較関数.
  デフォルトは `wtag-sort-track' でトラックナンバーでソートされます(nil でも同じ).
  `wtag-sort-track-2' にするとファイル名先頭の数字を数値としてソート.
  `wtag-sort-file-name' だとファイル名を文字列ソートされます.
  
  2つの引数を比較して真偽値を戻す比較関数ならその関数名でも OK です.
  関数には引数としてエイリアス・リスト([[info:./wtag.info#alias list]])が渡されるので, 
  比較する値の参照は `mf-alias-get' を使います.

#+BEGIN_SRC emacs-lisp
(lambda (a b)
  (string-lessp (mf-alias-get 'disk b) (mf-alias-get 'disk a)))
#+END_SRC
 
* 画面の構成と制限
  インデックス一覧とアートワークを表示するふたつのバッファで構成されています.
  インデックス・バッファは表示専用の wtag-view-mode と,
  編集するときのための wtag-writable-mode の2種類があり,
  アートワーク・バッファはジャケット画像表示専用バッファです[fn::この画像を保存したいときはこのバッファをカレントにして C-x C-w (write-file) すればできます].
  
  インデックスバッファの1行目と2行目のアルバム・アーティスト, アルバム名. リリース年, ジャンル
  そしてあれば隣のウィンドウに表示されるアートワーク.
  これらはトラック番号の一番小さなファイル(通常トラック1)のものが表示されています.

  これらを編集するとすべてのファイルに書換が起きます.
  逆にここを編集しないとこのフィールドが違うファイルがあっても,
  そのファイルの書換は起きません.

  例えばトラック2だけアートワークやアルバム名が違っても,
  アートワークの差替やアルバム名変更の操作をしなければ,
  トラック2のアートワークやアルバム名はそのまま元のままになります [fn:: prefix 付でフラッシュすると強制的に書換することもできます].

  該当タグが無いフィールドは `wtag-not-available-string' にセットされた文字列が表示されます.
  デフォルトは "n/a" です.

  末尾に空白があれば書き出されるときにカットされます.

- Variable: wtag-time-form ::
  コーデックシンボルをキーとする 時間表示文字列 の alist.
  それぞれのリストは CAR のタイプシンボルを除くと 3つの要素を持つことができ
  0 から数えて、ふたつめは prefix 時と help-echo 併用、
  3つ目の要素があればそちらが help-echo に使われます.
  ふたつめ以降はなくてもよく, その場合ひとつめが help-echo に併用されます.
  デフォルトは以下になります.

#+BEGIN_EXAMPLE
  '((mp3 "%2m'%02s\"" "%2m'%02s\"%4bk(%r%v)" "%2m'%02s\"%4ak [%r%v]")
    (mp4 "%2m'%02s\"" "%2m'%02s\"%4bkbps %B/%r%v")
    (*   "%2m'%02s\"" "%2m'%02s\"%4bkbps %B/%r"))
#+END_EXAMPLE

  %フォーマット文字には以下が使えます.

#+ATTR_TEXINFO: :columns .1 .9
| %h | 時間                        |
| %m | 分                          |
| %s | 秒                          |
| %a | MP3 LAME ABR 指定の Bitrate |
| %b | Bitrate                     |
| %B | Bit Size                    |
| %c | Channel                     |
| %r | Sampling Rate               |
| %t | Codec Type                  |
| %v | VBR String                  |

- Variable: wtag-time-all-form ::
  総時間表示のフォーマット文字列. 
  コンスセルで指定すると CDR がバルーン用になります.

- Variable: wtag-disk-name ::
  Disk number のバルーンで出るプレフィクス文字列.
  デフォルトは "Disc".
  
- Variable:  wtag-truncate-lines ::
  non-nilなら画面端で表示を折り返さない.
  デフォルトは t.

- Variable: wtag-not-available-string ::
  TAG が無いときの代替文字列.
  Default "n/a".

- Variable: wtag-index-buffer-suffix ::
  *Index buffer名サフィクス.
  Default  "*i".

- Variable: wtag-artwork-buffer-suffix ::
  *Cover buffer名サフィクス.
  Default "*a" .

* wtag view mode
  起動するとタグを見るための wtag view mode になり以下のバインドが有効になります.
** 一般
- key: q (wtag-quit) ::
 バッファを閉じて終了.

- key: Q (wtag-exit) ::
  バッファをキルして終了.

- key: g (wtag-reload-buffer) ::
  バッファのリロード.

- key: C-x C-q (wtag-writable-tag) ::
  編集モード([[info:./wtag.info#wtag writable mode]])に入る.
 
- key: C-c C-a (wtag-popup-artwark) ::
  アートワーク・バッファを再表示.
  
- key: f (wtag-fit-artwork-toggle) ::
  アートワークをウィンドウにフィット/等倍させるトグル(Emacs 27.1のみ).
  
- key: F (wtag-open-frame) ::
  アートワーク・バッファを別フレームで表示.

- key: C-c C-w (wtag-artwork-write) ::
  現在表示されているアートワークを `wtag-artwork-write-file-name' で指定した
  ファイル名でカレントディレクトリに保存します.
  prefix をつけて実行するとプロンプトが出てファイル名を指定できます.
  拡張子がなければ書き込み時に `image-type' を見て自動で追加します.

- Variable: wtag-artwork-write-file-name ::
  `wtag-artwork-write' で使うファイル名.
  デフォルトでは `wtag-artwork-keep' と共通の関数でアルバム名から作成した名前を使います.
  通常文字列で指定しますが,  参照時に eval するように書いてあるので
  実行時に評価される式も書けます.

: (setq wtag-artwork-write-file-name '(format-time-string "wtag-%Y%02m%02d%02H%02M%02S"))

- key: = (wtag-point-file-name) ::
  ポイントの曲の実ファイル名をエコーエリアに表示する.

- key: . (wtag-artist-name-truncate-mode) ::
  長いアーティスト名の表示を切り詰めたり戻したりするトグル.

- Variable:  wtag-artist-name-truncate-mode ::
  アーティスト名を短かく表示. Default t.
  Wtag artist name truncate minor mode.
  
- Variable: wtag-artist-name-truncate-length ::
  `wtag-artist-name-truncate-mode' の詰める長さ.
  Default 24.

- Variable: wtag-artist-name-ellipsis ::
  Artist name が切り詰められたとき末尾につく文字列.
  Default  "...".

** マーク
- key: m (wtag-mark-file) ::
  ポイントのファイルをマーク.

- key: u (wtag-unmark-file) ::
  ポイントのマークを解除.

- key: backspace (wtag-unmark-previous-file) ::
  ひとつ前のマークを解除.

- key: U (wtag-unmark-all-file) ::
  全マーク解除.

- key: C (wtag-copy) ::
  ポイント or マークされた曲を wtag または dired のバッファの default-directory にコピーします.
  コピー先が wtag のバッファならアルバム名等の共通タグ(アートワークを除く)を
  コピー先のタグと同じものにしてコピーします.

  wtag-view-mode バッファへはエクスプローラからの D & D でもコピーすることができます.

- key: D (wtag-mark-delete) ::
  ポイントのファイルに Delete マークを打つ.
  
- key: x (wtag-delete) ::
  D マークのついたファイルを削除する.

- key: w (wtag-name-push) ::
  ポイント or マークされた曲のタイトルをキルリングに登録.
  Prefix 有でアーティスト名. 0 Prefix で `タイトル - アーティスト名' になる.

- Variable: wtag-name-push ::
  `w' (wtag-name-push) で kill-ring にコピーされるフィールドの設定.
  タグ・エイリアスのシンボルで指定する(参照[[info:wtag.info#Alias list]]).

  1行目用, 2行目用, それ以降用の3要素のリストからなり,
  各要素の中身は更に3つの要素で構成され, ノーマル, プレフィクス,  ゼロプレフィクスで
  表示されるものとなる.
  要素がリストならひとつの文字列に concat される.
  デフォルトは

#+BEGIN_SRC emacs-lisp
  '((album a-artist (album " - " a-artist))
    (year genre comment)
    (title artist (artist " - " title)))
#+END_SRC

** プレイ
- key: P (wtag-music-play) ::
  ポイントの曲を再生します.
  また `3P' 等と数値プレフィクスを与えるとそのトラックを再生します.

- key: C-c C-c  (wtag-kill-process) ::
  再生中の音楽プロセスを停止する.

- Variable: wtag-music-players ::
  `wtag-music-play' の設定.
  ((拡張子 . (実行コマンド . オプション)) ...) からなるリスト.
  デフォルトは mp3 なら mpg123 で m4a, flac, wav なら wmplayer.

- Variable: wtag-process-break ::
  non-nil なら Writable mode に入るとき再生プロセスがあれば問い合わせなくブレイクする.
  デフォルトは nil で問い合わせが入る.

- Variable: wtag-music-play-next ::
  non-nil なら `wtag-music-play' を実行すると1行ポイントを進める.
  数値なら進む前その秒数ウエイトがかかる.
  デフォルトは nil.

- Variable: wtag-play-single-disk ::
  non-nil ならシングルディスクの場合 Play 時のトラック指定でディスク番号を含めなくていい.
  シングルディスクアルバムのときディスク1 の トラック1 なら `11P' とする処が `1P' で済む. 
  デフォルトは t.

** フォールド
 wtag view mode のときアルバム毎に表示をフォールド(折り畳み)して隠すことができます.

- key: [ (wtag-backward-disk-point) ::
  前のディスク先頭にポイントを移動します.
  
- key: ] (wtag-forward-disk-point) ::
    次のディスク先頭にポイントを移動します.

- key: h (wtag-invisible-hide) ::
  ポイントのディスク表示をフォールドします.
  
- key: s (wtag-invisible-show) ::
  ポイントがあるディスク表示のフォールドをオープンします.

- key: H (wtag-invisible-hide-all) ::
  すべてのディスク表示をフォールドします.
  
- key: S (wtag-invisible-show-all) ::
  すべてのディスク表示のフォールドをオープンします.

- key: t (wtag-invisible-toggle) ::
  ディスクフォールドを現在の状態からトグルします.

- key: TAB (wtag-invisible-toggle-and-next) ::
  ポイントのディスク表示をフォールドし次のディスクに移動しそのディスクをオープンする.

- key: S-TAB (wtag-invisible-toggle-all) ::
  すべてのディスク表示をフォールドし再び押すとすべてオープンします.

- Variable: wtag-ellipsis ::
  wtag view mode でアルバム表示をフォールドしたときの折り畳み省略文字列.
  Default は "...".

* wtag writable mode
  タグを編集するモードです.
  このモードになると画面がモノクロ基調になり、
  編集できるフィールドにだけカーソルが移動できるようになります.
  `TAB' や `S-TAB' で前後のフィールドにポイントを移動できます.

  wtag のバッファに jpg file[fn::または png などコーデック側で対応しているタイプ] をD&D すると,
  そのアートワークに差しかわります.

** 編集
- key: C-c C-c (wtag-flush-tag) ::
  変更されていればその内容でファイルを書換えて編集モードを終了します.

- key: C-c C-q (wtag-writable-tag-cancel) ::
  変更を破棄して編集モードを終了します.

- Variable: wtag-no-backup ::
  non-nil ならバックアップファイルを作らない.
  デフォルトは t でバックアップが作られる.
  ちなみに現行 Emacs であれば元のファイルはシステムの Trash に破棄されます.

- Variable: wtag-track-prefix-rename ::
  Track tag が変更されていればファイル名プレフィクスのトラック番号もそれに合わせ変更する.
  デフォルトは t でリネームされる.

- key: C-c C-a (wtag-artistname-copy-all) ::
  アルバム・アーティスト名を各トラックのアーティストのエリアすべてにコピーします.
  変数 `wtag-without-query' のメンバーに `wtag-artistname-copy-all' が在れば問い合わせません.

- key: C-x C-t (wtag-transpose-lines) ::
  ポイントのトラックと隣のトラックの入れ替える. トラック番号も振り直されます.
  このとき 0 prefix でポイント行とマーク行の入れ替えになるので、
  離れた行の入れ替えができます. 1～2行目にかかる箇所では使えません.

- key: C-x C-<up> (wtag-transpose-lines2) ::
  ポイント行と上の行を入れ替えリナンバーする. `C-x <down>' なら逆方向に動作する.
  `wtag-transpose-lines' と違うのは入れ替えられた行にポイントが移動し
  結果的にポイントが移動した行に留まるような動作になる.
  よって連続実行するとそのまま次々と行を移動させることができる.
  `wtag-transpose-lines-repeat' がセットしてあれば, 連続実行時にプレフィクスを省略できる.

- Variable: wtag-transpose-lines-repeat ::
  non-nil なら `wtag-transpose-lines' 系で `repeat-mode' が有効化する.
  通常連続実行する場合 C-x C-t C-x C-t ... などとする処が
  C-x C-t t t t... で済む.
  Default t.
   
- key: C-c C-i (wtag-artwork-load) ::
  新たなアートワークをロードします.
  ウィンドウズならエクスプローラからマウスで D&D することもできます.
  テキスト側のウィンドウ、イメージ側のウィンドウどちらにドロップしても OK です.
  変数 `wtag-without-query' のメンバーに `wtag-artwork-load が在れば問い合わせが入りません.

- Variable: wtag-artwork-keep ::
  この変数が non-nil なら `wtag-flush-tag' で編集モードを終了するとき
  元のアートワークをファイルに保存します.
  余計なファイルを作らないようデフォルトは nil です.
  
- Variable: wtag-regular-file-name-re ::
  アルバム名から keep するファイル名を作るので, 
  ファイル名として使えない文字をアンダスコアに置き換えます. 
  置き換える文字をこの変数に文字クラスで指定できます.
  デフォルトは "[.?:*/\\~\"'<>|]" です.

- Variable: wtag-regular-file-name ::
  キープするファイル名の長さ. Default は 32.

- Variable: wtag-force-load ::
  non-nil なら `wtag-view-mode' でも D&D でアートワークの差替がでるようになります.
  query だと問い合わせが入ります.
  また整数なら最初に 1度だけ取い合わせが入り, その秒数後まで問い合わせをしなくなります.
  デフォルトは nil.
  D&D で連続でジャケの差替をする人はこの変数に 300 等適当な秒数を指定し
  `wtag-artwork-keep' を t にしておくと使いやすいと思います.

- key: C-c C-e (wtag-all-title-erase) ::
  すべての曲名を削除し1曲目のタイトル位置にポイントを移動する.
  位置はマークされる.
  変数 `wtag-without-query' のメンバーに `wtag-all-title-erase' が在れば問い合わせません.

- key: C-c C-t (wtag-track-number-adjust) ::
  不揃いなトラックバンバーの順序をリナンバーし
  "トラック/トラック数" というフォーマットにします.

  通常ディスク毎に1から開始し打ち直すが,
  PREFIX をつけると全ディスクの通し番号にする.
  問い合わせ時 `a' と入力しても通し番号になります.

  変数 `wtag-without-query' のメンバーに `wtag-track-number-adjust' が在れば問い合わせません.

- Variable: wtag-without-query ::
  問い合わせ系コマンドで実行時の問い合わせを省略するコマンドのリスト. 

- key: C-c C-s (wtag-sort-tracks) ::
  1フォルダに違ったアルバムの曲がある等の場合, 
  アルバム名をキーにソートしてからリナンバーする.

  PREFIX があると `wtag-sort-key-function' からのキー選択メニューになる.
  PREFIX をふたつ打つとリバースになる.

- Variable: wtag-default-sort-key-function ::
  コマンド `wtag-sort-tracks' のソート関数.
  値は `album' か `artist' か `title'.
  デフォルトはアルバム名をキーにしてソートする `album'.

- Variable: wtag-log-file-name ::
  wtag log file name. `format-time-string' の書式文字列を使いフルパスで指定する.
  nil なら保存されず non-nil ならそれを名前にして Emacs 終了時に書き出し時のログをファイルに書き出す. 
  Default "~/wtag-%Y%m%d%H%M%S.log".

** 移動 他
- key: TAB (wtag-next-tag) ::
  次の編集フィールドにポイントを移動します `S-TAB' で逆方向移動になります.

- key: M-@} (wtag-forward-jump-points) ::
  ディスク1 のトラック1のアーティスト名フィールド, タイトルフィールド,
  その次のディスクの... と次々にポイント移動する. 

- key: M-@{ (wtag-backward-jump-points) ::
  wtag-forward-jump-points の逆巡回.

- key: C-c C-f (wtag-fit-artwork-toggle) ::
  アートワークをウィンドウにフィット/等倍させるトグルです. Emacs 27.1以降のみ対応です.

* Hooks
- Variable: wtag-flush-hook ::
  `mf-tag-write' に渡す直前に tag list を引数にして呼び出すアブノーマル・フック.

- Variable: wtag-quit-hook ::
  `wtag-quit', `wtag-exit' 等の最後に実行されるノーマルフック.
  
* kakasi について
  システムに [[http://kakasi.namazu.org/index.html.ja][kakasi]](漢字→かな(ローマ字)変換プログラム)がインストールされていると、
  カタカナに読み変換したものを(例え正しく変換されなくても)ソート用タグとして自動的に追加します.

  ウィンドウズ用の kakasi はバイナリが Unicode に対応する前の古いものしかないようなので
  環境によっては `process-coding-alist' にコーディング・ルールを追加しないと駄目かもしれません。

#+BEGIN_SRC emacs-lisp
(set-default-coding-systems 'utf-8-unix)
(setenv "LC_ALL" "ja_JP.utf8") ;; for CYGWIN Command
(push '("kakasi\\|wmplayer" . cp932-dos) process-coding-system-alist)
#+END_SRC

# システムに kakasi がインストール済みで Emacs 上で kakasi にパスが通っていれば自動的にセットアップされます.
# kakasi が無いとソート用タグは追加されません.

# *** カカシオフにするにはコレを NIL ればいい?
- Variable: wtag-kakashi ::
  カカシを絶対パスで指定. nil ならソートタグは元の文字列の単純コピーになる.
  デフォルトは実行パスからカカシを探し, あれば自動的にセットする.

- Variable: wtag-kakashi-usrdic ::
  kakasi を賢くするための辞書. SKK のユーザ辞書があればデフォルトでセットします.
  nil なら辞書なしになります.
  kakasi に指定する辞書は skk-user.dic > 無指定 > skk-large.dic の順で賢くなるようです.

- Variable: wtag-add-sort-tag ::
  non-nil なら書き出し時に対応ソートタグを追加する.
  デフォルトは t.

* Music File Tag Write
  `mf-tag-write' は wtag のタグ書換エンジンです.
  特に wtag 専用ではなく単独でも関数として動作します.

- Function: mf-tag-write file &optional tags no-backup stamp noerror ::
  mp3 FILE 等のタグの書換をします(参照:[[info:wtag.info#対応コーデック]]).

  TAGS は `mf-tag-read' が出力するプロパティリスト, または
  タグ(参照 [[info:wtag.info#Alias list]])とデータをコンスセルにしたリストで
  CDR が nil だとそのタグは削除されます.
  指定したタグのみ書き変わり, 他のタグはそのまま残ります.
  "ファイル.jpg" のようなファイル名ならアートワーク・タグのデータになります.

  : (mf-tag-write "foo.mp3" '((title . "bar") (track . "12") "baz.jpg"))

  NO-BACKUP が non-nil ならバックアップ・ファイルを残しません. 
  STAMP が non-nil ならオリジナルのタイムスタンプをコピーします.
  NOERROR は不正なタグを指定してもエラーになりません.
  
- Function: mf-tag-read file &optional length no-binary ::
  mp3 file 等のタグを :tag  :data のプロパティリストにして戻します.
  アートワーク等他のプロパティがあるものもあります.

  LENGTH はタグ解析のために読み込むバイト数. nil ならファイルすべてを読み込みます. 
  NO-BINARY が non-nil ならアートワーク・タグがあっても出力しません.

: ((:tag "TIT2" :data "Truckin'") (:tag "TPE1" :data "Grateful Dead") ...)

** `mf-tag-read' のバリエーション
  別形式のリストで戻すバリエーションです.
  :data 以外のデータがあってもオミットされます.

- Function: mf-tag-read-alist file &optional length no-binary ::
  タグとデータをコンスセルにした alist にして戻します.

: (("TIT2" . "Truckin'") ("TPE1" . "Grateful Dead") ...)

- Function: mf-tag-read-alias file &optional length no-binary ::
  `mf-tag-read-alist' の CAR に alias を付け足した alist 化して戻します.
  タグに対応するエイリアスが判ります.

: ((title "TIT2" . "Truckin'") (artist "TPE1" . "Grateful Dead") ...)
  
- Function: mf-tag-read-alias-alist file &optional length no-binary ::
  タグを省略してエイリアスとデータの対のコンスセルで戻します.
  `mf-tag-write' に与えるときのデータはこれだけでいいので,
  通常 tag-read はこの関数で済むと思います.

: ((title . "Truckin'") (artist . "Grateful Dead") ...)

- Function: mf-tag-read-plist file &optional length no-binary ::
  プロパティリスト1本で戻します. ループの中では使いやすいかもしれません.

: (title "Truckin'" artist "Grateful Dead" ...)

** 対応コーデック
  対応するコーデックは同梱の mf-lib-*.el で読めるものです.
  mp3 oma m4a(mp4) flac 等に対応しています.
  ogg wma 等は読み込みのみで書換には非対応です.

- Variable: mf-lib-suffix-all ::
  対応するコーデックのサフィクスシンボルのリストがセットされています.
  set できるのはライブラリからの自己登録のみで通常は参照専用です.

** Alias list
タグをエイリアスしてあり, コーデックによるタグの差異を吸収しています.
主なシンボルです. [fn::すべてのシンボルは各 mf-lib-*.el の変数 mf-*-tag-alias を参照してください.]

#+ATTR_TEXINFO: :columns .2 .8
| エイリアス | 対応                     |
|------------+--------------------------|
| title      | 曲名                     |
| artist     | アーティスト名           |
| album      | アルバム名               |
| genre      | ジャンル                 |
| track      | トラック                 |
| disk       | ディスク番号             |
| year       | リリース年               |
| a-artist   | アルバム・アーティスト名 |
| comment    | コメント                 |
| cover      | アートワーク             |
|------------+--------------------------|


# * Changes

# * 関連&参考プログラム
# - [[https://qiita.com/s-fubuki/items/0f470b859837927b4e28][mf-tag-write]]
# - [[http://kakasi.namazu.org/index.html.ja][kakasi]]
# - [[https://www.gnu.org/software/emacs/][GNU EMACS]]
# - C-h f wdired-mode
# 

#+TEXINFO: @printindex vr

